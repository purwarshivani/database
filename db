--@E:\Bhuwan\createuser.txt

--creating normal users
create user doublu identified by password;
grant create session to doublu;
grant create table to doublu;
grant create view to doublu;
grant create sequence to doublu;
grant create synonym to doublu;
grant create procedure to doublu;
grant create trigger to doublu;
grant create cluster to doublu;
grant create type to doublu;
grant unlimited tablespace to doublu;

--to provide all privileges
--grant all privileges to username;

--to connect to the users
--connect username;
--password:
--SELECT * FROM TAB;
--DESC TAB;
--DESC books;

-- to check particular table
-- SELECT tname from TAB;
/* 
@ E:/Bhuwan/droptest.txt
module_name, your_name, date

good practice is important.  
Script filess should structured, tidy and professional to aim usability
 
*/

-- Note the order of the tables

-- DROP COMMANDS
DROP TABLE loans;
DROP TABLE books;
DROP TABLE students;

DROP TABLE customers;
PURGE RECYCLEBIN;
/* 
module_name, your_name, date

good practice is important.  
Script filess should structured, tidy and professional to aim usability
 
*/
 
 -- RunCommand EG @f:\databases\createtest.txt
 
 -- NOTE ORDER THE INSERT COMMANDS ARE IN

-- INSERTS

INSERT INTO students 
(student_id,national_ins,student_fname,student_lname,street,tel_no,gender,date_of_birth)
VALUES (2000, 'JA123645B','TOM','THOMAS','NEW WAY','01601 735500','F','01-JAN-03');

INSERT INTO books 
VALUES(12,'TWO TOWERS','SECOND IN TRILOGY','TOLKIEN','PENGIUN','01-JAN-78',1);

INSERT INTO loans (student_id,isbn,loan_date)
VALUES(2000,12,'20-JAN-78');


/* 
module_name, your_name, date

good practice is important.  
Script filess should structured, tidy and professional to aim usability
 
*/
 
 -- RunCommand EG @f:\databases\constrainstest.txt
 
 -- NOTE THE ORDER THE COMMANDS ARE IN T

--PRIMARY KEYS
ALTER TABLE students
ADD CONSTRAINT pk_student_id
PRIMARY KEY (student_id);

ALTER TABLE books
ADD CONSTRAINT pk_isbn
PRIMARY KEY (isbn);

ALTER TABLE loans
ADD CONSTRAINT pk_loan
PRIMARY KEY (student_id,isbn,loan_date);

--FOREIGN KEYS
ALTER TABLE loans
ADD CONSTRAINT fk_loan_student
FOREIGN KEY (student_id)
REFERENCES students (student_id);

ALTER TABLE loans
ADD CONSTRAINT fk_loan_book
FOREIGN KEY (isbn)
REFERENCES books (isbn);

--UNIQUE KEYS
ALTER TABLE students
ADD CONSTRAINT uk_NI
UNIQUE (national_ins);

--CHECK CONSTRAINTS
ALTER TABLE students
ADD CONSTRAINT ck_student_fname
CHECK (student_fname = UPPER(student_fname));

ALTER TABLE students
ADD CONSTRAINT ck_student_lname
CHECK (student_lname = UPPER(student_lname));

ALTER TABLE students
ADD CONSTRAINT ck_gender
CHECK (GENDER IN ('F','M'));

ALTER TABLE students
ADD CONSTRAINT ck_gender_nn
CHECK (GENDER IS NOT NULL);

--DEFAULTS
ALTER TABLE students
MODIFY  (city
DEFAULT 'NORTHAMPTON');

/* 
module_name, your_name, date

good practice is important.  
Script filess should structured, tidy and professional to aim usability
 
*/
 
 -- RunCommand EG @E:\Bhuwan\createtest.txt
 
 -- NOTE ORDER THE TABLES ARE CREATED, THE NOT NULLS AND DEFAULT VALUES

-- CREATE TABLE COMMANDS

CREATE TABLE students(
student_id      NUMBER(4),
national_ins	VARCHAR2(10),
student_fname   VARCHAR2(10),
student_lname   VARCHAR2(12),
street		VARCHAR2(10),
city		VARCHAR2(15),
country		VARCHAR2(15)DEFAULT 'ENGLAND',
tel_no         	VARCHAR2(15) NOT NULL,
gender       	VARCHAR2(1) ,
date_of_birth  	DATE);

CREATE TABLE books(
isbn     	NUMBER(2),
title  		VARCHAR2(15),
note		VARCHAR2(50),
Author          VARCHAR2(12),
Publisher       VARCHAR2(15),
date_published  DATE,
edition		NUMBER(2));

CREATE TABLE loans(
student_id      NUMBER(4),
isbn     	NUMBER(2),
loan_date	DATE);


CREATE TABLE customers(
customer_id  NUMBER(5),
first_name VARCHAR2(15),
surname VARCHAR2(20),
DOB DATE,
gender CHAR,
contact_no VARCHAR2(15));



	
